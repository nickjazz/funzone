"use strict";(self.webpackChunkfunzone=self.webpackChunkfunzone||[]).push([[385],{"./src/stories/basic/Whiteboard.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Whiteboard_stories});var react=__webpack_require__("./node_modules/react/index.js"),src_components=__webpack_require__("./src/components/index.ts"),CustomComponent=__webpack_require__("./src/components/CustomComponent/index.tsx");const schema3_namespaceObject=JSON.parse('[{"id":"row-1","children":[{"id":"col-1-1","type":"PageHeader","props":{"title":"Application is 2","span":4}},{"id":"col-1-2","type":"PageHeader","props":{"title":"show me first, index 1","span":4}}],"props":{}},{"id":"row-2","children":[{"id":"col-1-3","type":"NavBar","props":{"data":[{"label":"Navigation One","key":"mail"},{"label":"Navigation Two","key":"app","disabled":true}]}}],"props":{}},{"id":"row-3","children":[{"id":"col-3-1","type":"PageHeader","props":{"title":"show 1","span":3}},{"id":"col-3-2","type":"PageHeader","props":{"title":"show 2","span":2}},{"id":"col-3-3","type":"PageHeader","props":{"title":"show me 3","span":2}},{"id":"col-3-4","type":"PageHeader","props":{"title":"last","span":"auto"}}],"props":{}}]');var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Whiteboard_stories={title:"Whiteboard",component:src_components.nN},mockItems=schema3_namespaceObject,Template=()=>{const[data,setData]=(0,react.useState)(mockItems),[next,setNext]=(0,react.useState)(mockItems),components=[{label:"PageHeader",group:"block",key:"PageHeader",markup:CustomComponent.mr,defaultProps:{span:4,title:"default title"}},{label:"NavBar",group:"block",key:"NavBar",markup:CustomComponent.l2,defaultProps:{span:12}},{label:"Form",group:"inline",key:"Form",markup:CustomComponent.l0,defaultProps:{span:4}}];return(0,jsx_runtime.jsx)("div",{className:"flex gap-10",children:(0,jsx_runtime.jsxs)(src_components.NO,{ui:components,schema:data,onChange:e=>{console.log("[handleChange]",e),setNext(e)},children:[(0,jsx_runtime.jsx)(src_components.jw,{className:"w-[200px]"}),(0,jsx_runtime.jsx)(src_components.nN,{className:"flex-1 max-w-[60vw]"}),(0,jsx_runtime.jsx)(src_components.ND,{className:"flex-1 max-w-[300px]"})]})})};Template.displayName="Template";const Primary=Template.bind({});Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'() => {\n  const [data, setData] = useState(mockItems);\n  const [next, setNext] = useState(mockItems);\n  const components = [{\n    label: "PageHeader",\n    group: "block",\n    key: "PageHeader",\n    markup: PageHeader,\n    defaultProps: {\n      span: 4,\n      title: "default title"\n    }\n  }, {\n    label: "NavBar",\n    group: "block",\n    key: "NavBar",\n    markup: NavBar,\n    defaultProps: {\n      span: 12\n    }\n  }, {\n    label: "Form",\n    group: "inline",\n    key: "Form",\n    markup: Form,\n    defaultProps: {\n      span: 4\n    }\n  }];\n  const handleChange = e => {\n    console.log("[handleChange]", e);\n    setNext(e);\n  };\n  return <div className="flex gap-10">\n            <Funzone ui={components} schema={data} onChange={handleChange}>\n                <ComponentsLib className="w-[200px]" />\n                <Whiteboard className="flex-1 max-w-[60vw]" />\n                <SenSorCenter className="flex-1 max-w-[300px]" />\n            </Funzone>\n        </div>;\n}',...Primary.parameters?.docs?.source}}};const __namedExportsOrder=["Primary"]}}]);